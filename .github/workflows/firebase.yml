name: Publish to Firebase
run-name: 'Publish Firebase: for ${{ inputs.platform }} with ${{ inputs.api }} API (${{ github.run_number }})'

on:
  push:
    branches:
      - firebase-publish-for-ios
  workflow_dispatch:
    inputs:
      platform:
        description: Platform
        required: true
        default: both
        type: choice
        options:
          - both
          - android
          - ios
      api:
        description: Type
        required: true
        default: development
        type: choice
        options:
          - development
          - staging
          - production
      release-notes:
        description: Release notes
        required: false
        type: string

permissions:
  contents: read

jobs:
  config:
    name: Configure Firebase publish options
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      release-notes: ${{ inputs.release-notes }}
      api: development

      version-code: ${{ steps.version-code.outputs.version-code }}
      version-name: ${{ steps.version-name.outputs.version-name }}
    steps:
      - name: Set version code
        id: version-code
        run: echo "version-code=${{ github.run_number }}" >> "${GITHUB_OUTPUT}"

      # For version-name based on CalVer (Calendar Versioning) e.g. 24.3.21
      - name: Set CalVer version name
        id: version-name
        run: echo "version-name=$(date +"%g.%-m.%-d")" >> "${GITHUB_OUTPUT}"

  publish-firebase-android:
    name: Publish Android to Firebase
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: config
    if: inputs.platform == 'both' || inputs.platform == 'android'
    environment: android-firebase-${{ needs.config.outputs.api }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare build environment
        uses: ./.github/actions/prepare-android-build-environment

      - name: Create required files
        working-directory: android/app
        run: |
          echo "$FIREBASE_SERVICE_CREDENTIALS_FILE_CONTENT" > firebase-credentials.json
          echo "$UPLOAD_KEY" | base64 --decode > keystore.jks
        env:
          FIREBASE_SERVICE_CREDENTIALS_FILE_CONTENT: ${{ secrets.FIREBASE_SERVICE_CREDENTIALS_FILE_CONTENT }}
          UPLOAD_KEY: ${{ secrets.ANDROID_UPLOAD_KEY_BASE_64 }}

      - name: Fastlane firebase publish
        run: bundle exec fastlane android publish_firebase
        working-directory: android
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/android/app/firebase-credentials.json
          # This can be kept public, because it's already disclosed in google-services.json.
          FIREBASE_APP_ID: ${{ vars.FIREBASE_APP_ID }}

          VERSION_NAME: ${{ needs.config.outputs.version-name }}
          VERSION_CODE: ${{ needs.config.outputs.version-code }}
          RELEASE_NOTES: ${{ needs.config.outputs.release-notes }}

          # Full path is required by Fastlane otherwise
          # Keystore file '/home/runner/.gradle/daemon/7.3.3/debug.keystore' not found for signing config 'externalOverride'.
          KEY_PATH: ${{ github.workspace }}/android/app/keystore.jks
          KEY_ALIAS: ${{ vars.ANDROID_UPLOAD_KEY_ALIAS }}
          KEY_STORE_PASSWORD: ${{ secrets.ANDROID_UPLOAD_KEY_STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.ANDROID_UPLOAD_KEY_PASSWORD }}

          SENTRY_ORG: biip
          SENTRY_PROJECT: biip-medziokle-mobile
          SENTRY_URL: https://sentry.biip.lt
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

          APP_ENV: ${{ vars.APP_ENVIRONMENT }}
          BASE_URL: ${{ vars.APP_API_BASE_URL }}

  publish-firebase-ios:
    name: Publish iOS to Firebase
    runs-on: macos-14
    timeout-minutes: 30
    needs: config
    #    if: inputs.platform == 'both' || inputs.platform == 'ios'
    environment: ios-firebase-${{ needs.config.outputs.api }}
    env:
      FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 120

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare build environment
        uses: ./.github/actions/prepare-ios-build-environment
        id: ios-build-environment
        with:
          match-git-private-key-content: ${{ secrets.MATCH_GIT_PRIVATE_KEY }}

      - name: Create Firebase required files
        working-directory: ios
        run: |
          echo "$FIREBASE_SERVICE_CREDENTIALS_FILE_CONTENT" > firebase-credentials.json
        env:
          FIREBASE_SERVICE_CREDENTIALS_FILE_CONTENT: ${{ secrets.FIREBASE_SERVICE_CREDENTIALS_FILE_CONTENT }}

      - name: Fastlane publish to TestFlight
        run: bundle exec fastlane ios publish_firebase
        working-directory: ios
        env:
          # This can be kept public, because it's already disclosed in google-services.json.
          FIREBASE_APP_ID: ${{ vars.FIREBASE_APP_ID }}

          FASTLANE_TEAM_ID: ${{ secrets.FASTLANE_TEAM_ID }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_GIT_PRIVATE_KEY: ${{ steps.ios-build-environment.outputs.match-git-private-key-path }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

          VERSION_NAME: ${{ needs.config.outputs.version-name }}
          VERSION_CODE: ${{ needs.config.outputs.version-code }}
          RELEASE_NOTES: ${{ needs.config.outputs.release-notes }}

          SENTRY_ORG: biip
          SENTRY_PROJECT: biip-medziokle-mobile
          SENTRY_URL: https://sentry.biip.lt
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

          APP_ENV: ${{ vars.APP_ENVIRONMENT }}
          BASE_URL: ${{ vars.APP_API_BASE_URL }}
